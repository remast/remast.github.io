<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go, beginners on Jan Stamer</title><link>https://remast.github.io/tags/go-beginners/</link><description>Recent content in go, beginners on Jan Stamer</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Mon, 29 Aug 2022 12:11:13 +0000</lastBuildDate><atom:link href="https://remast.github.io/tags/go-beginners/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Integration Tests using Testcontainers</title><link>https://remast.github.io/posts/2022-08_go-for-testcontainers/</link><pubDate>Mon, 29 Aug 2022 12:11:13 +0000</pubDate><guid>https://remast.github.io/posts/2022-08_go-for-testcontainers/</guid><description>Go Integration Tests using Testcontainers Your application uses a database like PostgreSQL? So how do you test your persistence layer to ensure it&amp;rsquo;s working properly with a real PostgreSQL database? Right, you need to test against a real PostgreSQL. Since that test requires external infrastructure it&amp;rsquo;s an integration test. You&amp;rsquo;ll learn now how easy it is to write integration tests for external infrastructure using Testcontainers and Docker.
Integration Test Setup Our application stores users in a PostgreSQL database.</description></item></channel></rss>